on skript start:
  delete {tps_graph::*}

function getTpsGraph() :: string:
  set {_labels} to ""
  set {_data} to ""

  set {_len} to size of {tps_graph::*}
  set {_max_entries} to 64
  set {_offset} to {_len} - {_max_entries}

  loop {tps_graph::*}:
    if {_offset} > 0:
      subtract 1 from {_offset}
      continue
      
    set {_l} to "%unix date of (loop-index parsed as number) formatted as ""HH:mm""% UTC"
    replace all " " in {_l} with "%%20"
    set {_d} to loop-value
    replace all " " in {_d} with "%%20"

    set {_labels} to "%{_labels}%'%{_l}%',"
    set {_data} to "%{_data}%%{_d}%,"
    
  set {_labels} to first (length of {_labels} - 1) characters of {_labels}
  set {_data} to first (length of {_data} - 1) characters of {_data}

  set {_link} to "https://quickchart.io/chart?bkg=white&f=webp&c={type:'line',data:{labels:[%{_labels}%],datasets:[{label:'Last+%{_max_entries}%+TPS+Entries',data:[%{_data}%]}]}}"
  replace all "§" in {_link} with "&"
  return {_link}

every 5 minutes:
  set {tps_graph::%unix timestamp of now%} to tps from last 5 minutes

command /tps:
  trigger:
    set {_tps} to tps from last minute
    send "§3Server TPS: §b%{_tps}%"

command /ping <Player=%player%>:
  trigger:
    set {_ping} to arg-1's ping
    set {_ping_text} to "§4%{_ping}%ms" if {_ping} > 1250
    set {_ping_text} to "§c%{_ping}%ms" if {_ping} <= 1250
    set {_ping_text} to "§6%{_ping}%ms" if {_ping} <= 500
    set {_ping_text} to "§e%{_ping}%ms" if {_ping} <= 250
    set {_ping_text} to "§a%{_ping}%ms" if {_ping} <= 100
    set {_ping_text} to "§2%{_ping}%ms" if {_ping} <= 50

    send "§3§l%arg-1%§3§l's Ping:§r %{_ping_text}%"