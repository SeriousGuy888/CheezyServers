options:
  # perReward: 23.75 hours
  # loseStreak: 2 days
  reward: 0.1
  rewardAddend: 0.05

on join:
  if {login_streak::%player%.epoch_day_num} is not set:
    set {login_streak::%player%.epoch_day_num} to (unix timestamp of 1 day ago / 86400)
  if (unix timestamp of now / 86400) - {login_streak::%player%.epoch_day_num} >= 1:
    make player execute command "/claimdailyreward"

command /claimdailyreward:
  trigger:
    if {login_streak::%player%.epoch_day_num} is not set:
      set {login_streak::%player%.epoch_day_num} to (unix timestamp of 1 day ago / 86400)
    if (unix timestamp of now / 86400) - {login_streak::%player%.epoch_day_num} >= 1:
      if (unix timestamp of now / 86400) - {login_streak::%player%.epoch_day_num} >= 2:
        if {login_streak::%player%.streak} > 1:
          send "§6You lost your §e%{login_streak::%player%.streak}% §6day login streak!"
        set {login_streak::%player%.streak} to 0

      add 1 to {login_streak::%player%.streak}

      set {_reward} to {@reward}
      add ({@rewardAddend} * ({login_streak::%player%.streak} - 1)) to {_reward}

      add {_reward} to {bank.balance::%player%}
      set {login_streak::%player%.epoch_day_num} to floor(unix timestamp of now / 86400)

      logEconomyAction("`%player%` received `%{_reward}%` coins for their `%{login_streak::%player%.streak}%` day login streak. (Days since epoch: `%{login_streak::%player%.epoch_day_num}%`)")
      send "§6You have received §e%{_reward}% §esunfles §6for your §e%{login_streak::%player%.streak}% §6day login streak."
    else:
      set {_next_reward} to unix date of (floor(unix timestamp of 1 day after now / 86400) * 86400)
      set {_time_until_reward} to (difference between now and {_next_reward})
      send "§cYou already claimed your login steak for today (%{login_streak::%player%.epoch_day_num}%§c). Your next reward will be available at 00:00 UTC, which is in %{_time_until_reward}%§c."