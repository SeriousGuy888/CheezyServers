options:
  idLength: 10
  idAssignmentInterval: 5 seconds
  namePrefix: Villager ##
  idPrefix: vil5-
  idVersion: 5
  idAssignedParticleEffect: show 15 happy villager above location of loop-entity

  lastNames: ("Trumpet", "Snowman", "Toothbrush", "Smith", "Duck", "Ass", "Bass", "Bypass", "Class", "Crass", "Grass", "Mass", "Pass", "Gas", "Jackass", "Nervegas", "Trespass", "Pompeii", "Trump", "Biden", "Sandals", "Blunt", "Elchapo", "Pie", "Garfield", "Inbred", "Hrrm", "Hrrrm", "Hurm", "Hurrm", "Herrm", "Hurrrm", "Hrm", "Hrrrmson", "Claus", "Candycane", "Golem", "Stolen", "Goldfish", "Ingot", "Baron", "Christ", "Yeti", "Rubik", "Cube", "Death", "Nuke", "Sheppard", "Liam", "Bee", "Ironforests", "Jasper", "Bovine", "Thorium", "Plutonium", "Uranium", "Hexagon", "Matteoville", "Dragonson", "Bluntson", "Puzic", "Aardvark", "Weeeeed", "Druggledealerson", "Caterpillar", "Jasperlandtwo", "Holden", "Tobytopia", "Youtubson", "Netherite", "Moolah", "Hmm", "Hm", "Hmmm", "H'mm", "Jakob", "Porkchop", "Honag")
  firstNames: ("Aary", "Barry", "Berry", "Birch", "Blackberry", "Blackcherry", "Blueberry", "Cary", "Carry", "Cranberry", "Dairy", "Earring", "Fairy", "Ferry", "Gary", "Gerry", "Glary", "Hairy", "Harry", "Jerry", "Karen", "Kerosene", "Larry", "Mary", "Merry", "Parry", "Quarry", "Quantum", "Raspberry", "Scary", "Sherry", "Sorry", "Terry", "Very", "Wary", "Yeti", "Blunt", "Fynchy", "Cocaniny", "Weedy", "Druggie", "Goldie", "Googly", "Jackson", "Holdy", "Toby", "Laim", "Chris", "Glory", "Hurrrm", "Smith", "Lazy", "Hrrm", "Hurrm", "Billzo")

function nameVillager(e: entity, first: string, last: string):
  set name of {_e} to "%{_first}% %{_last}%"

every {@idAssignmentInterval}:
  loop all entities:
    loop-entity is villager
    
    set {_assign_new_name} to false
    if loop-entity's name is not set:
      set {_assign_new_name} to true
    if loop-entity's name starts with "{@namePrefix}":
      set {_assign_new_name} to true
    if loop-entity's name is "rename":
      set {_assign_new_name} to true

    if {_assign_new_name} is true:
      set {_l} to random element out of {@lastNames}
      set {_f} to random element out of {@firstNames}
      set name of loop-entity to "%{_f}% %{_l}%"
      {@idAssignedParticleEffect}


command /villagerid:
  aliases: /villid, /vid
  trigger:
    if "%targeted entity%" is not "villager":
      send "§cYou must be looking at a villager!"
      stop
    set {_villagerId} to {villagerid::%targeted entity's uuid%} otherwise "[unassigned]"
    set {_villagerName} to display name of targeted entity otherwise "§2this villager"
    send "%nl%§2The UUID of §a%{_villagerName}% §2is%nl%§a%targeted entity's uuid%%nl%%nl%§2."

on breed:
  event-entity is villager
  set {_fl} to last element of (name of breeding father split at " ")
  set {_ml} to last element of (name of breeding mother split at " ")
  
  set {_l} to {_fl}
  set {_l} to {_ml} if chance of 50%
  set {_l} to "%{_fl}%-%{_ml}%" if chance of 10%

  if {_fl} = {_ml}:
    set {_l} to "%{_fl}%-%{_ml}%"
  
  if length of {_l} > 128:
    set {_l} to first 128 characters of {_l}

  set {_f} to random element out of {@firstNames}
  set name of event-entity to "%{_f}% %{_l}%"