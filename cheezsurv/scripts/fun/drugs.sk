options:
  cocaine: sugar named "§rCocaine" with lore "§7CheezSurv Authentic Drugglez™"
  weed: tall grass named "§rMarijuana" with lore "§7CheezSurv Authentic Drugglez™"

  cocaineDuration: 45
  weedDuration: 30

function purchaseDrugs(p: player, stock_id: string, amt: number, i: item):
  if {bank.balance::%{_p}%} < {_price}:
    send "§cInsufficient funds!" to {_p}
    stop
  if {_p}'s inventory cannot hold {_i}:
    send "§cInsufficient inventory space!" to {_p}
    stop
  if {_amt} > {drugs.shop.stock::%{_stock_id}%}:
    send "§cInsufficient stock!" to {_p}
    stop
  
  set {_price} to {drugs.shop.price::%{_stock_id}%} otherwise 123456789

  subtract {_price} from {bank.balance::%{_p}%}
  add {_price} to {treasury.balance}
  subtract {_amt} from {drugs.shop.stock::%{_stock_id}%}

  give {_amt} of {_i} to {_p}

  make {_p} execute command "/drugshop"
  send "§aYou have purchased %{_amt}% §aof %{_stock_id}% §aand paid %{_price}% §acoins to the treasury." to {_p}
  logEconomyAction("`%{_p}%` purchased `%{_amt}%` of druggle `%{_stock_id}%` for `%{_price}%` coins from the treasury")

command /drugglez:
  executable by: players
  trigger:
    if player is not op:
      send "§cInsufficient permissions!"
      stop
    
    open chest with 1 row named "CheezSurv Authentic Drugglez™" to player
    wait 1 tick
    format slot 0 of player with {@cocaine} to run [give player 64 of {@cocaine}]
    format slot 1 of player with {@weed} to run [give player 64 of {@weed}]

command /drugshopstock [<text>] [<number>]:
  trigger:
    if player is not op:
      send "§cInsufficient permissions!"
      stop
    
    if arg-1 is not set:
      loop {drugs.shop.stock::*}:
        send "%loop-index% - %loop-value%"
    else:
      if arg-2 is not set:
        send "%arg-1% - %{drugs.shop.stock::%arg-1%}%"
      else:
        set {drugs.shop.stock::%arg-1%} to arg-2
        send "set stock of %arg-1% to %arg-2%"
command /drugshopprice [<text>] [<number>]:
  trigger:
    if player is not op:
      send "§cInsufficient permissions!"
      stop
    
    if arg-1 is not set:
      loop {drugs.shop.price::*}:
        send "%loop-index% - %loop-value%"
    else:
      if arg-2 is not set:
        send "%arg-1% - %{drugs.shop.price::%arg-1%}%"
      else:
        set {drugs.shop.price::%arg-1%} to arg-2
        send "set price of %arg-1% to %arg-2%"


command /drugshop:
  trigger:
    open chest with 3 rows named "the government's shady alley" to player
    wait 1 tick

    loop 27 times:
      format slot (loop-number - 1) of player with light gray stained glass pane named " " to be unstealable
    loop 9 times:
      format slot (loop-number + 18 - 1) of player with gray stained glass pane named " " to be unstealable
      if loop-number = 5:
        format slot (loop-number + 18 - 1) of player with sunflower named "§6Balance" with lore "§e%{bank.balance::%player%}%§ec" to be unstealable

    format slot 0 of player with sugar named "§fCocaine" with lore "§6Cost: §e%{drugs.shop.price::cocaine}%§ec", "§6Stock: §e%{drugs.shop.stock::cocaine}%", "", and "§3ID: §bcocaine" to run [purchaseDrugs(player, "cocaine", 1, {@cocaine})]
    format slot 1 of player with tall grass named "§aMarijuana" with lore "§6Cost: §e%{drugs.shop.price::weed}%§ec", "§6Stock: §e%{drugs.shop.stock::weed}%", "", and "§3ID: §bweed" to run [purchaseDrugs(player, "weed", 1, {@weed})]


command /drugeffects <player=%player%>:
  trigger:
    send "%arg-1%'s max health is at %{drugs.max_health::%arg-1%} otherwise ""default""% and will wear off in %{drugs.max_health::%arg-1%.timer} otherwise ""-1""% seconds."
    send "%arg-1%'s absorption will wear off in %{drugs.absorption::%arg-1%.timer} otherwise ""-1""% seconds."

every second in world "world":
  loop all players:
    if {drugs.max_health::%loop-player%} is not set:
      continue
    if {drugs.max_health::%loop-player%.timer} <= 0:
      delete {drugs.max_health::%loop-player%.timer}
      delete {drugs.max_health::%loop-player%}
      continue
    subtract 1 from {drugs.max_health::%loop-player%.timer}
    if health of loop-player > {drugs.max_health::%loop-player%}:
      set health of loop-player to {drugs.max_health::%loop-player%}
  
  loop all players:
    if {drugs.absorption::%loop-player%.timer} = 0:
      set absorption hearts of loop-player to 0
    if {drugs.absorption::%loop-player%.timer} < -1:
      set {drugs.absorption::%loop-player%.timer} to -1
      continue
    subtract 1 from {drugs.absorption::%loop-player%.timer}


on heal:
  event-entity is player
  health of event-entity >= {drugs.max_health::%event-entity%}
  cancel event


on right click:
  if player's tool is {@cocaine}:
    cancel event
    remove 1 of player's tool from player
    apply speed 3 to player for {@cocaineDuration} seconds
    apply strength 3 to player for {@cocaineDuration} seconds
    apply haste 3 to player for {@cocaineDuration} seconds

    set metadata "druggifying" of player to "cocaine"
    subtract 2 from player's health

    set {drugs.max_health::%player%} to 8
    add {@cocaineDuration} to {drugs.max_health::%player%.timer}

    set absorption hearts of player to 4
    add {@cocaineDuration} to {drugs.absorption::%player%.timer}


    send "§eAdded {@cocaineDuration} seconds to the effects of the cocaine." to player

    wait 5 seconds
    delete metadata "druggifying" of player

  if player's tool is {@weed}:
    cancel event
    remove 1 from item amount of player's tool
    remove 1 of player's tool from player
    apply slowness 1 to player for {@weedDuration} seconds
    apply hunger 1 to player for {@weedDuration} seconds
    apply strength 2 to player for {@weedDuration} seconds
    apply jump boost 2 to player for {@weedDuration} seconds
    if chance of 25%:
      apply mining fatigue 1 to player for {@weedDuration} seconds
    apply nausea 1 to player for 3 seconds

    set {drugs.max_health::%player%} to 9
    add {@weedDuration} to {drugs.max_health::%player%.timer}

    set absorption hearts of player to 2
    add {@weedDuration} to {drugs.absorption::%player%.timer}

    send "§eAdded {@weedDuration} seconds to the effects of the marijuana." to player


on death:
  if metadata "druggifying" of player = "cocaine":
    set death message to "%player% overdosed on cocaine"
  set {drugs.max_health::%player%.timer} to 0
  set {drugs.absorption::%player%.timer} to 0


command /undruggify <player=%player%>:
  trigger:
    if player is not op:
      send "§cInsufficient permissions!"
      stop
    set {drugs.max_health::%arg-1%.timer} to 1
    set {drugs.absorption::%arg-1%.timer} to 1
    make console execute command "/effect clear %arg-1%"