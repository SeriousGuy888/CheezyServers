options:
  attackChargeUpSpeed: 12
  attackChargeUpMax: 120 # it is filled at 100 but can go up to this number for a short grace period
  combatTimer: 10
  specialAttackMultiplier: 1.5
  now: unix timestamp of now

every 4 ticks:
  loop all players:
    # send "looping %loop-player%" to "Cheez2" parsed as player

    set {_last_combat} to difference between {pvp::%loop-player%.combat} and {@now}
    set {_combat_log} to {@combatTimer} - {_last_combat}
    set {_combat} to true
    if {_last_combat} > {@combatTimer}:
      set {_combat} to false
      remove loop-player from bossbar {pvp::%loop-player%.bossbar} if {pvp::%loop-player%.bossbar} is set
      delete {pvp::%loop-player%.bossbar}

    if {_combat} is true:
      if loop-player's target is set:
        set {_chargeup} to true
        set {_dist} to distance between loop-player and loop-player's target
        if {_dist} < 6:
          add {@attackChargeUpSpeed} / 2 to {pvp::%loop-player%.chargeup}
          if {pvp::%loop-player%.chargeup} > {@attackChargeUpMax}:
            set {pvp::%loop-player%.chargeup} to {@attackChargeUpMax}
      else:
        set {_chargeup} to false
        subtract {@attackChargeUpSpeed} / 2 from {pvp::%loop-player%.chargeup}
        if {pvp::%loop-player%.chargeup} < 0:
          set {pvp::%loop-player%.chargeup} to 0

    if {pvp::%loop-player%.bossbar} is set:
      remove loop-player from bossbar {pvp::%loop-player%.bossbar}
      delete {pvp::%loop-player%.bossbar}
    set {pvp::%loop-player%.bossbar} to a new bossbar

    set colour of bossbar {pvp::%loop-player%.bossbar} to yellow
    if {_chargeup} is true:
      if {pvp::%loop-player%.chargeup} >= 100:
        set colour of bossbar {pvp::%loop-player%.bossbar} to green
        set {_bossbar_title} to "§2[LMB] §a⚔ {@specialAttackMultiplier}x DMG"
        if loop-player's tool is sword:
          set {_bossbar_title} to "%{_bossbar_title}% §7| §2[RMB] §a» Charge"
        set title of bossbar {pvp::%loop-player%.bossbar} to {_bossbar_title}
      else:
        set title of bossbar {pvp::%loop-player%.bossbar} to "§eAttack and Combo Chargeup"
      set {_progress} to min({pvp::%loop-player%.chargeup}, 100) / 100
    else:
      set colour of bossbar {pvp::%loop-player%.bossbar} to blue
      set title of bossbar {pvp::%loop-player%.bossbar} to "§bCombat Log (%round({_combat_log})% seconds)"
      set {_progress} to round({_combat_log}) / {@combatTimer}


    set progress of bossbar {pvp::%loop-player%.bossbar} to {_progress}
    if {_combat} is true:
      add loop-player to bossbar {pvp::%loop-player%.bossbar}

on damage:
  if attacker is player:
    if difference between {pvp::%attacker%.combat} and {@now} < 1: # if last attack was less than one second ago, a combo
      add {@attackChargeUpSpeed} * 2 to {pvp::%attacker%.chargeup}
      play sound "block.glass.hit" to attacker
      send action bar "§aCombo! (+%{@attackChargeUpSpeed} * 2%%% Attack Chargeup)" to attacker

    set {pvp::%attacker%.combat} to {@now}

    if {pvp::%attacker%.chargeup} >= 100:
      set damage to damage * {@specialAttackMultiplier}
      send action bar "§aUsed {@specialAttackMultiplier}x damage multiplier!" to attacker
      subtract {@attackChargeUpMax} / 2 from {pvp::%attacker%.chargeup}
      play sound "entity.player.attack.strong" at victim
      if victim is a player:
        send action bar "§cOpponent used {@specialAttackMultiplier}x damage multiplier!" to victim
        loop 3 times:
          play sound "block.note_block.snare" to victim
          wait 1 tick
  if victim is player:
    attacker is set
    set {pvp::%victim%.combat} to {@now}

on right click:
  player's tool is sword
  {pvp::%player%.chargeup} >= 100
  subtract {@attackChargeUpMax} from {pvp::%player%.chargeup}
  set metadata "pvp_charging" of player to {@now}
  send action bar "§aCharging..." to player
  push player forwards with force 1.5
  loop 4 times:
    play sound "entity.generic.small_fall" at player
    wait 3 tick
every 4 ticks:
  loop all players:
    set {_charge_timestamp} to metadata "pvp_charging" of loop-player
    {_charge_timestamp} is set
    if difference between {_charge_timestamp} and {@now} >= 2:
      delete metadata "pvp_charging" of loop-player
      continue
    if x of loop-player's velocity is 0:
      y of loop-player's velocity is 0
      delete metadata "pvp_charging" of loop-player
      continue
    loop all entities in radius 2 around loop-player:
      loop-entity-2 is not loop-player
      make loop-player damage loop-entity-2 by 1


on quit:
  delete {pvp::%player%.bossbar}

  set {_last_combat} to difference between {pvp::%player%.combat} and {@now}
  set {_combat_log} to {@combatTimer} - {_last_combat}
  set {_combat} to true
  if {_last_combat} > {@combatTimer}:
    set {_combat} to false
  
  if {_combat} is true:
    set metadata "combat_log_death" of player to true
    kill player

on death:
  metadata "combat_log_death" of player is true
  set metadata "combat_log_death" of player to false
  set death message to "%player% was killed for combat logging"