every second:
  {event.livein} is less than 0
  delete {event.livein}

command /createevent [<Text>]:
  permission: cheez.event.create
  permission message: §cYou require the permission node cheez.event.create to use this command!
  trigger:
    if executor is console:
      message "The console cannot execute this command!"
    if executor is player:
      if arg-1 is not set:
        message "§3§lCorrect Usage: §b/createevent <Event Name>"
      if arg-1 is set:
        if {event.on} is not set:
          set {event.on} to false
        if {event.on} is true:
          message "§c§lERROR §c| There is currently an ongoing event."
        if {event.livein} is set:
          message "§c§lERROR §c| There is currently a scheduled event."
        if {event.on} is false:
          {event.livein} is not set
          if length of arg-1 is more than 24:
            message "§c§lERROR §c| The name of events are limited to 24 characters!"
          else if length of arg-1 is less than or equal to 24:
            set {event.on} to true
            set {event.recentlyended} to false
            set {event.name} to arg-1
            set {event.world} to player's world
            set {event.host} to player
            set {event.x} to player's x-coordinate
            set {event.y} to player's y-coordinate
            set {event.z} to player's z-coordinate
            #message "%nl%§e§lDebug: §eEventOn: %{event.on}%%nl%§eEventName: %{event.name}%%nl%§eEventWorld: %{event.world}%%nl%§eEventHost: %{event.host}%%nl%§eEventCoords: %{event.x}%,%{event.y}%,%{event.z}%%nl%"
            broadcast "§3An event named §b%{event.name}%§3 has been started by §b%player%§3!%nl%§3Use the command §b/event join§3 to join this event!"

command /createliveevent [<Text>] [<Number>]:
  permission: cheez.event.create.live
  permission message: §cYou require the permission node cheez.event.create.live to use this command!
  trigger:
    if executor is console:
      message "The console cannot execute this command!"
    if executor is player:
      if arg-1 is not set:
        message "§3§lCorrect Usage: §b/createliveevent <Event Name> <Time Until Starting (Minutes)>"
      if arg-1 is set:
        if {event.on} is not set:
          set {event.on} to false
        if {event.on} is true:
          message "§c§lERROR §c| There is currently an ongoing event."
        if {event.livein} is set:
          message "§c§lERROR §c| There is currently a scheduled event."
        if {event.on} is false:
          {event.livein} is not set
          if length of arg-1 is more than 24:
            message "§c§lERROR §c| The name of events are limited to 24 characters!"
          else if length of arg-1 is less than or equal to 24:
            if arg-2 is not set:
              message "§3§lCorrect Usage: §b/createliveevent %arg-1% <Time Until Starting (Minutes)>"
            if arg-2 is set:
              set {event.recentlyended} to false
              set {event.name} to arg-1
              set {event.world} to player's world
              set {event.host} to player
              set {event.x} to player's x-coordinate
              set {event.y} to player's y-coordinate
              set {event.z} to player's z-coordinate
              set {event.livein} to arg-2 * 60
              #message "%nl%§e§lDebug: §eEventOn: %{event.on}%%nl%§eEventName: %{event.name}%%nl%§eEventWorld: %{event.world}%%nl%§eEventHost: %{event.host}%%nl%§eEventCoords: %{event.x}%,%{event.y}%,%{event.z}%%nl%§eEventLiveIn: %{event.livein}%%nl%"
              broadcast "§3An event named §b%{event.name}%§3 has been scheduled to start in §b%arg-2%§3 minutes by §b%player%§3!"
              loop {event.livein} times:
                if {event.livein} is 600:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b10§3 Minutes!"
                if {event.livein} is 300:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b5§3 Minutes!"
                if {event.livein} is 180:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b3§3 Minutes!"
                if {event.livein} is 120:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b2§3 Minutes!"
                if {event.livein} is 60:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b1§3 Minute!"
                if {event.livein} is 30:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b30§3 Seconds!"
                if {event.livein} is 20:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b20§3 Seconds!"
                if {event.livein} is 10:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b10§3 Seconds!"
                if {event.livein} is 5:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b5§3 Seconds!"
                if {event.livein} is 4:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b4§3 Seconds!"
                if {event.livein} is 3:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b3§3 Seconds!"
                if {event.livein} is 2:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b2§3 Seconds!"
                if {event.livein} is 1:
                  broadcast "§3Event §b%{event.name}%§3 starts in §b1§3 Second!"
                  wait 1 second
                  set {event.on} to true
                  broadcast "§3Event §b%{event.name}%§3 is live! (/event join)"
                remove 1 from {event.livein}
                wait 1 second

command /stopevent:
  permission: cheez.event.stop
  permission message: §cYou require the permission node cheez.event.stop to use this command!
  trigger:
    if {event.on} is not set:
      set {event.on} to false
    if {event.livein} is not set:
      message "§cThere is currently no ongoing event!"
    else if {event.livein} is set:
      message "§aStopping event..."
      delete {event.livein}
      set {event.on} to false
      wait 35 ticks
      message "§aSuccess!"
      broadcast "§3The event §b%{event.name}%§3 has been shut down by §b%player%§3.%nl%§b/event rate§3 to rate the event!"
      loop all players:
        set {event.rated.%loop-player%} to false
      set {event.recentlyended} to true
      delete {event.ratings::*}
      wait 30 seconds
      set {event.recentlyended} to false
      set {_rating} to 0
      loop {event.ratings::*}:
        add {event.ratings::%loop-index%} to {_rating}
      set {_rating} to {_rating} / size of {event.ratings::*}
      broadcast "§3Event rating session ended.%nl%§3The event was rated §b%{_rating}%/10§3."
    if {event.on} is not set:
      set {event.on} to false
    if {event.on} is false:
      message "§cThere is currently no ongoing event!"
    else if {event.on} is true:
      message "§aStopping event..."
      delete {event.livein}
      set {event.on} to false
      wait 35 ticks
      message "§aSuccess!"
      broadcast "§3The event §b%{event.name}%§3 has been shut down by §b%player%§3.%nl%§b/event rate§3 to rate the event!"
      loop all players:
        set {event.rated.%loop-player%} to false
      set {event.recentlyended} to true
      delete {event.ratings::*}
      wait 30 seconds
      set {event.recentlyended} to false
      set {_rating} to 0
      loop {event.ratings::*}:
        add {event.ratings::%loop-index%} to {_rating}
      set {_rating} to {_rating} / size of {event.ratings::*}
      broadcast "§3Event rating session ended.%nl%§3The event was rated §b%{_rating}%/10§3."

command /event <Text="info"> [<Number>]:
  trigger:
    if executor is console:
      message "The console cannot execute this command!"
    if executor is player:
      if arg-1 is "info":
        message "%nl%§9§lEVENT INFO"
        if {event.on} is not set:
          set {event.on} to false
        if {event.on} is false:
          message "§bThere is currently not any ongoing event.%nl%"
        if {event.on} is true:
          message "§3Event Name: §b%{event.name}%%nl%§3Event Host: §b%{event.host}%%nl%§2Use §a/event join§2 to join this event!%nl%"
      if arg-1 is "join":
        message "§aJoining event..."
        wait 5 ticks
        if {event.on} is false:
          message "§c§lERROR §c| There is no ongoing event."
        if {event.world} is not set:
          message "§c§lERROR §c| Varibable EventWorld is not set. Contact an admin."
        if {event.x} is not set:
          message "§c§lERROR §c| Varibable EventX is not set. Contact an admin."
        if {event.y} is not set:
          message "§c§lERROR §c| Varibable EventY is not set. Contact an admin."
        if {event.z} is not set:
          message "§c§lERROR §c| Varibable EventZ is not set. Contact an admin."
        {event.world} is set
        {event.x} is set
        {event.y} is set
        {event.z} is set
        {event.on} is true
        # make console execute command "/mv tp %player% e:%{event.world}%:%{event.x}%,%{event.y}%,%{event.z}%"
        teleport player to location({event.x}, {event.y}, {event.z}, {event.world})
        message "§aSuccess!"
      if arg-1 is "rate":
        if {event.recentlyended} is false:
          message "§c§lERROR §c| No recently ended event to rate."
        if {event.recentlyended} is true:
          if arg-2 is not set:
            message "§c/event rate <1 - 10>"
          if arg-2 is set:
            if {event.rated.%player%} is true:
              message "§cYou already rated!"
            else if {event.rated.%player%} is false:
              if arg-2 is less than 1:
                message "§cRating must be between 1 and 10."
              if arg-2 is more than 10:
                message "§cRating must be between 1 and 10."
              arg-2 is more than 0
              arg-2 is less than 11
              add arg-2 to {event.ratings::*}
              set {event.rated.%player%} to true
              message "§aSubmitted your rating!"