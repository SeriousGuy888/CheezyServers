every second:
  {event.livein} is less than 0
  delete {event.livein}

command /createevent [<Text>]:
  permission: cheez.event.create
  permission message: §cYou require the permission node cheez.event.create to use this command!
  executable by: players
  trigger:
    if arg-1 is not set:
      message "§3§lCorrect Usage: §b/createevent <Event Name>"
      stop
    set {event.on} to false if {event.on} is not set

    if {event.on} is true:
      message "§c§lERROR §c| There is currently an ongoing event."
    if {event.livein} is set:
      message "§c§lERROR §c| There is currently a scheduled event."
    if {event.on} is false:
      {event.livein} is not set
      if length of arg-1 is more than 24:
        message "§c§lERROR §c| The name of events are limited to 24 characters!"
      else if length of arg-1 is less than or equal to 24:
        set {event.on} to true
        set {event.recentlyended} to false
        set {event.name} to arg-1
        set {event.host} to player
        set {event.location} to player's location
        #message "%nl%§e§lDebug: §eEventOn: %{event.on}%%nl%§eEventName: %{event.name}%%nl%§eEventWorld: %{event.world}%%nl%§eEventHost: %{event.host}%%nl%§eEventCoords: %{event.x}%,%{event.y}%,%{event.z}%%nl%"
        broadcast "§3An event named §b%{event.name}%§3 has been started by §b%player%§3!%nl%§3Use the command §b/event join§3 to join this event!"

command /createliveevent [<Text>] [<Number>]:
  permission: cheez.event.create.live
  permission message: §cYou require the permission node cheez.event.create.live to use this command!
  executable by: players
  trigger:
    if arg-1 is not set:
      message "§3§lCorrect Usage: §b/createliveevent <Event Name> <Time Until Starting (Minutes)>"
      stop
    if {event.on} is not set:
      set {event.on} to false
    if {event.on} is true:
      message "§c§lERROR §c| There is currently an ongoing event."
    if {event.livein} is set:
      message "§c§lERROR §c| There is currently a scheduled event."
    if {event.on} is false:
      {event.livein} is not set
      if length of arg-1 is more than 24:
        message "§c§lERROR §c| The name of events are limited to 24 characters!"
      else if length of arg-1 is less than or equal to 24:
        if arg-2 is not set:
          message "§3§lCorrect Usage: §b/createliveevent %arg-1% <Time Until Starting (Minutes)>"
        if arg-2 is set:
          set {event.recentlyended} to false
          set {event.name} to arg-1
          set {event.host} to player
          set {event.location} to player's location
          set {event.livein} to arg-2 * 60
          #message "%nl%§e§lDebug: §eEventOn: %{event.on}%%nl%§eEventName: %{event.name}%%nl%§eEventWorld: %{event.world}%%nl%§eEventHost: %{event.host}%%nl%§eEventCoords: %{event.x}%,%{event.y}%,%{event.z}%%nl%§eEventLiveIn: %{event.livein}%%nl%"
          broadcast "§3An event named §b%{event.name}%§3 has been scheduled to start in §b%arg-2%§3 minutes by §b%player%§3!"
          loop {event.livein} times:
            if {event.livein} is 600:
              broadcast "§3Event §b%{event.name}%§3 starts in §b10§3 Minutes!"
            if {event.livein} is 300:
              broadcast "§3Event §b%{event.name}%§3 starts in §b5§3 Minutes!"
            if {event.livein} is 180:
              broadcast "§3Event §b%{event.name}%§3 starts in §b3§3 Minutes!"
            if {event.livein} is 120:
              broadcast "§3Event §b%{event.name}%§3 starts in §b2§3 Minutes!"
            if {event.livein} is 60:
              broadcast "§3Event §b%{event.name}%§3 starts in §b1§3 Minute!"
            if {event.livein} is 30:
              broadcast "§3Event §b%{event.name}%§3 starts in §b30§3 Seconds!"
            if {event.livein} is 20:
              broadcast "§3Event §b%{event.name}%§3 starts in §b20§3 Seconds!"
            if {event.livein} is 10:
              broadcast "§3Event §b%{event.name}%§3 starts in §b10§3 Seconds!"
            if {event.livein} is 5:
              broadcast "§3Event §b%{event.name}%§3 starts in §b5§3 Seconds!"
            if {event.livein} is 4:
              broadcast "§3Event §b%{event.name}%§3 starts in §b4§3 Seconds!"
            if {event.livein} is 3:
              broadcast "§3Event §b%{event.name}%§3 starts in §b3§3 Seconds!"
            if {event.livein} is 2:
              broadcast "§3Event §b%{event.name}%§3 starts in §b2§3 Seconds!"
            if {event.livein} is 1:
              broadcast "§3Event §b%{event.name}%§3 starts in §b1§3 Second!"
              wait 1 second
              set {event.on} to true
              broadcast "§3Event §b%{event.name}%§3 is live! (/event join)"
            remove 1 from {event.livein}
            wait 1 second


function stopEvent(p: player):
  send "§aStopping event..." to {_p}
  delete {event.livein}
  set {event.on} to false
  wait 35 ticks
  broadcast "§3The event §b%{event.name}%§3, hosted by §b%{event.host}%§3 has been shut down by §b%{_p}%§3.%nl%§b/event rate§3 to rate the event!"
  loop all players:
    set {event.rated.%loop-player%} to false
  set {event.recentlyended} to true
  delete {event.ratings::*}
  wait 30 seconds
  set {event.recentlyended} to false
  set {_rating} to 0
  loop {event.ratings::*}:
    add {event.ratings::%loop-index%} to {_rating}
  set {_rating} to {_rating} / size of {event.ratings::*}
  broadcast "§3Event rating session ended.%nl%§3The event was rated an average of §b%{_rating}%/10§3 based on §b%size of {event.ratings::*}%§3 votes."


command /stopevent:
  permission: cheez.event.stop
  permission message: §cYou require the permission node cheez.event.stop to use this command!
  trigger:
    set {event.on} to false if {event.on} is not set
      
    if {event.livein} is not set:
      if {event.on} is false:
        send "§cThere is currently no ongoing event!"
        stop
      
    stopEvent(player)

command /event <text="info"> [<integer>]:
  executable by: players
  trigger:
    if arg-1 is "info":
      set {event.on} to false if {event.on} is not set

      send "%nl%§9§lEVENT INFO"
      if {event.on} is false:
        send "§bThere is currently not any ongoing event.%nl%"
      if {event.on} is true:
        send "§3Event Name: §b%{event.name}%%nl%§3Event Host: §b%{event.host}%%nl%§2Use §a/event join§2 to join this event!%nl%"
    if arg-1 is "join":
      send "§aJoining event..."
      wait 5 ticks
      if {event.on} is false:
        send "§c§lERROR §c| There is no ongoing event."
        stop
      if {event.location} is not set:
        send "§c§lERROR §c| The event does not have a location. Contact an admin."
        stop
      teleport player to {event.location}
      send "§aSuccess!"
    if arg-1 is "rate":
      if {event.recentlyended} is false:
        send "§c§lERROR §c| No recently ended event to rate."
        stop

      if arg-2 is not set:
        send "§c/event rate <1 - 10>"
      if arg-2 is set:
        if {event.rated.%player%} is true:
          send "§cYou already rated!"
        else if {event.rated.%player%} is false:
          if arg-2 is less than 1:
            send "§cRating must be between 1 and 10."
            stop
          if arg-2 is more than 10:
            send "§cRating must be between 1 and 10."
            stop
          add arg-2 to {event.ratings::*}
          set {event.rated.%player%} to true
          send "§aSubmitted your rating!"